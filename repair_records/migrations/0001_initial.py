# Generated by Django 4.2.6 on 2024-03-22 05:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('codename', models.CharField(blank=True, max_length=200, verbose_name='Inventory Number')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('prob_breaking', models.FloatField(default=0, verbose_name='Probab. of Breaking')),
                ('break_affect', models.FloatField(default=0, verbose_name='Affect of Breaking')),
            ],
            options={
                'verbose_name': 'Equipment',
                'verbose_name_plural': 'Equipments',
            },
        ),
        migrations.CreateModel(
            name='EquipmentInactiveTime',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(verbose_name='Start/End time fo Inactivity')),
                ('active_type', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive')], max_length=1, verbose_name='Activity Type')),
            ],
            options={
                'verbose_name': 'Equipment Inactive Time',
                'verbose_name_plural': 'Equipment Inactive Times',
            },
        ),
        migrations.CreateModel(
            name='EquipmentNode',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Equipment Node',
                'verbose_name_plural': 'Equipment Nodes',
            },
        ),
        migrations.CreateModel(
            name='WorkType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('factory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.factory', verbose_name='Section')),
            ],
            options={
                'verbose_name': 'Work Type',
                'verbose_name_plural': 'Work Types',
            },
        ),
        migrations.CreateModel(
            name='WorkAction',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('factory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.factory', verbose_name='Factory')),
            ],
            options={
                'verbose_name': 'Work Action',
                'verbose_name_plural': 'Work Actions',
                'db_table': 'work_action',
            },
        ),
        migrations.CreateModel(
            name='RepairType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('codename', models.CharField(max_length=5, verbose_name='CodeName')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('factory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.factory', verbose_name='Section')),
            ],
            options={
                'verbose_name': 'Repair Type',
                'verbose_name_plural': 'Repair Types',
            },
        ),
        migrations.CreateModel(
            name='RepairRecord',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('allocated_time', models.TimeField(null=True, verbose_name='Allocated Time')),
                ('reason', models.TextField(verbose_name='Reason')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True)),
                ('work_done', models.TextField(blank=True, null=True, verbose_name='Work Done')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='Start Time')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='End Time')),
                ('total_time', models.DurationField(blank=True, null=True, verbose_name='Total Time')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repair_records.equipment', verbose_name='Equipment')),
                ('equipment_node', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='repair_records.equipmentnode', verbose_name='Node')),
                ('factory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.factory', verbose_name='Factory')),
                ('master', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_master', related_query_name='master', to=settings.AUTH_USER_MODEL, verbose_name='Master')),
                ('performers', models.ManyToManyField(related_name='%(app_label)s_%(class)s_performers', related_query_name='performers', to=settings.AUTH_USER_MODEL, verbose_name='Performers')),
                ('repair_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repair_records.repairtype', verbose_name='Repair Type')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.section', verbose_name='Section')),
            ],
            options={
                'verbose_name': 'Repair Record',
                'verbose_name_plural': 'Repair Records',
                'permissions': [('summarize_repairrecord', 'Can summarize repair record')],
            },
        ),
    ]
